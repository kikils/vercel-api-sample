openapi: 3.0.3
info:
  title: Sample Vercel API
  version: 1.0.0
servers:
  - url: 'http://localhost:3000'
paths:
  /api/v1/health:
    get:
      description: ヘルスチェック
      responses:
        204:
          description: 204 response
  /api/v1/user:
    post:
      description: ユーザー作成
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostUserRequest'
      responses:
        201:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostUserResponse'
    get:
      description: ユーザー検索
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserResponse'
    patch:
      description: ユーザー更新
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      requestBody:
       content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchUserRequest' 
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchUserResponse'
    delete:
      description: ユーザー削除
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        204:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteUserResponse'

components:
  schemas:
    PostUserRequest:
      type: object
      properties:
        name:
          type: string
      required:
        - name
    PatchUserRequest:
      type: object
      properties:
        name:
          type: string
      required:
        - name
    PostUserResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
      required:
        - user
    GetUserResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
    PatchUserResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
    DeleteUserResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
    User:
      type: object
      required:
        - name
      properties:
        id: { type: string, example: 'name' }
        name: { type: string, example: 'name' }